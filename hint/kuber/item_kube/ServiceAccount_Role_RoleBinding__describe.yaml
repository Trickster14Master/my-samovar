# Уровень NS
# ServiceAccount посути осуществляет аунтификацию по токенам для контейнеров внутри кубера 
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-sa
  namespace: example-1
---
# в роле мы описываем разрешения для подов 
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: example-1
  name: role-app
rules:
  # даём  разрешение на пролистывание и изменения деплоев 
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["list", "patch"] # казываем что разрешено
---
# С помощью RoleBinding мы связываем Role к ServiceAccount
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: example-1-rb
  namespace: example-1
subjects:
  - kind: ServiceAccount
    name: app-sa # казываем сервис акаунт
    namespace: example-1 # указываем найм спейс 
  - kind: ServiceAccount
    name: default
    namespace: default
roleRef:
  kind: Role
  name: role-app # казываем какую роль привязываем 
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Namespace
metadata:
  name: example-1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuber-2
  namespace: example-1
  labels:
    app: kuber-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: http-server-1
  template:
    metadata:
      labels:
        app: http-server-1
    spec:
      serviceAccountName: app-sa-1 # указываем какие права у нас есть 
      containers:
        - name: kuber-app
          image: bakavets/kuber:v2.0
          ports:
            - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: kuber-service-1
  namespace: example-1
spec:
  selector:
    app: http-server-1
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
---



# Уровень всего кластера 
# ServiceAccount посути осуществляет аунтификацию по токенам для контейнеров внутри кубера 
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-sa-2
  namespace: example-2
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole # ClusterRole может выдавать права на изменение не внутри определённого NS а внутри кластера целиком
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: example-2-cr
rules:
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: example-2-crb
subjects:
  - kind: ServiceAccount
    name: app-sa-2
    namespace: example-2
roleRef:
  kind: ClusterRole
  name: example-2-cr
  apiGroup: rbac.authorization.k8s.io
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-sa-2
  namespace: example-2
---
apiVersion: v1
kind: Namespace
metadata:
  name: example-2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuber-2
  namespace: example-2
  labels:
    app: kuber-2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: http-server-2
  template:
    metadata:
      labels:
        app: http-server-2
    spec:
      serviceAccountName: app-sa-2
      containers:
        - name: kuber-app
          image: bakavets/kuber:v2.0
          ports:
            - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: kuber-service-2
  namespace: example-2
spec:
  selector:
    app: http-server-2
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000