# ServiceAccount посути осуществляет аунтификацию по токенам для донтейнеров в нутри кубера 
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-sa
  namespace: example-1
---
# в роле мы описываем разрешения для подов 
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: example-1
  name: role-app
rules:
  # даём  разрешение на пролистывание и изменения деплоев 
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["list", "patch"]
  - apiGroups: [""] # "" indicates the core API group
    resources: ["services"]
    verbs: ["get", "list"]
  # https://kubernetes.io/docs/reference/access-authn-authz/rbac/#referring-to-resources
  - apiGroups: [""]
    resources: ["pods", "pods/log"]
    verbs: ["get", "list"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    resourceNames: ["nginx-deployment"]
    verbs: ["get"]
---
# С помощью RoleBinding vs ghbdzpsdftv Role к ServiceAccount
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: example-1-rb
  namespace: example-1
subjects:
  - kind: ServiceAccount
    name: app-sa
    namespace: example-1
  - kind: ServiceAccount
    name: default
    namespace: default
roleRef:
  kind: Role
  name: role-app
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Namespace
metadata:
  name: example-2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuber-2
  namespace: example-2
  labels:
    app: kuber-2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: http-server-2
  template:
    metadata:
      labels:
        app: http-server-2
    spec:
      serviceAccountName: app-sa-2 # указываем какие права у нас есть 
      containers:
        - name: kuber-app
          image: bakavets/kuber:v2.0
          ports:
            - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: kuber-service-2
  namespace: example-2
spec:
  selector:
    app: http-server-2
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
